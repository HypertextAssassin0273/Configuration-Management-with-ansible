---
# System Updates and Package Management
- name: Update all packages
  hosts: all
  become: yes
  tasks:
    - name: Update apt cache and upgrade packages
      apt:
        update_cache: yes
        upgrade: dist

# User Management
- name: Manage users and groups
  hosts: all
  become: yes
  tasks:
    - name: Create user group
      group:
        name: developers
        state: present

    - name: Add user
      user:
        name: "{{ item }}"
        groups: developers
        shell: /bin/bash
        create_home: yes
      loop:
        - dev1
        - dev2

# SSH Configuration
- name: Configure SSH
  hosts: all
  become: yes
  tasks:
    - name: Set SSH configuration
      template:
        src: templates/sshd_config.j2
        dest: /etc/ssh/sshd_config
        mode: '0600'
      notify: Restart SSH

  handlers:
    - name: Restart SSH
      service:
        name: sshd
        state: restarted

# File System Management
- name: Configure file systems
  hosts: all
  become: yes
  tasks:
    - name: Create directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /opt/application
        - /var/log/application

    - name: Mount volumes
      mount:
        path: /mnt/data
        src: /dev/sdb1
        fstype: ext4
        state: mounted

# Network Configuration
- name: Configure networking
  hosts: all
  become: yes
  tasks:
    - name: Set hostname
      hostname:
        name: "{{ inventory_hostname }}"

    - name: Configure network interfaces
      template:
        src: templates/interfaces.j2
        dest: /etc/network/interfaces
      notify: Restart networking

  handlers:
    - name: Restart networking
      service:
        name: networking
        state: restarted

# Security Configuration
- name: Apply security configurations
  hosts: all
  become: yes
  tasks:
    - name: Configure firewall rules
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - 22
        - 80
        - 443

    - name: Enable SELinux
      selinux:
        state: enforcing
        policy: targeted

# Service Management
- name: Manage services
  hosts: all
  become: yes
  tasks:
    - name: Ensure services are running
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - nginx
        - postgresql
        - redis

# Database Configuration
- name: Configure databases
  hosts: database_servers
  become: yes
  tasks:
    - name: Install PostgreSQL
      package:
        name: postgresql-server
        state: present

    - name: Initialize PostgreSQL
      command: postgresql-setup --initdb
      args:
        creates: /var/lib/pgsql/data/postgresql.conf

# Web Server Configuration
- name: Configure web servers
  hosts: web_servers
  become: yes
  tasks:
    - name: Install Nginx
      package:
        name: nginx
        state: present

    - name: Configure Nginx virtual hosts
      template:
        src: templates/vhost.conf.j2
        dest: /etc/nginx/conf.d/{{ item.domain }}.conf
      loop: "{{ virtual_hosts }}"
      notify: Reload Nginx

  handlers:
    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded

# Monitoring Configuration
- name: Set up monitoring
  hosts: all
  become: yes
  tasks:
    - name: Install monitoring agents
      package:
        name: "{{ item }}"
        state: present
      loop:
        - prometheus-node-exporter
        - collectd

    - name: Configure monitoring
      template:
        src: templates/collectd.conf.j2
        dest: /etc/collectd.conf
      notify: Restart collectd

  handlers:
    - name: Restart collectd
      service:
        name: collectd
        state: restarted

# Backup Configuration
- name: Configure backups
  hosts: all
  become: yes
  tasks:
    - name: Install backup tools
      package:
        name: rsnapshot
        state: present

    - name: Configure backup jobs
      cron:
        name: "Daily backup"
        hour: "2"
        minute: "0"
        job: "/usr/bin/rsnapshot daily"

# Log Management
- name: Configure logging
  hosts: all
  become: yes
  tasks:
    - name: Configure rsyslog
      template:
        src: templates/rsyslog.conf.j2
        dest: /etc/rsyslog.conf
      notify: Restart rsyslog

    - name: Set up log rotation
      template:
        src: templates/logrotate.conf.j2
        dest: /etc/logrotate.d/custom
