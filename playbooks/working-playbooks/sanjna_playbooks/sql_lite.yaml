---
- name: Install and configure SQLite
  hosts: all
  become: yes
  vars:
    sqlite_db_path: "/opt/sqlite/my_database.db"
    sqlite_user: "sqlite_user"
    sqlite_group: "sqlite_group"
    
  tasks:
    # Step 1: Install SQLite
    - name: Install SQLite
      apt:
        name: sqlite3
        state: present
        update_cache: yes
    
    # Step 2: Install Python pip
    - name: Install Python pip
      apt:
        name: python3-pip
        state: present

    # Step 3: Install the packaging library for pip
    - name: Install packaging library
      pip:
        name: packaging
        state: present
    
    # Step 4: Create the sqlite_user and sqlite_group if they do not exist
    - name: Create sqlite user group
      group:
        name: "{{ sqlite_group }}"
        state: present

    - name: Create sqlite user
      user:
        name: "{{ sqlite_user }}"
        group: "{{ sqlite_group }}"
        state: present
        create_home: no

    # Step 5: Create the SQLite database directory
    - name: Create SQLite database directory
      file:
        path: "{{ sqlite_db_path | dirname }}"
        state: directory
        owner: "{{ sqlite_user }}"
        group: "{{ sqlite_group }}"
        mode: '0755'
    
    # Step 6: Check if SQLite database file exists
    - name: Check if SQLite database exists
      stat:
        path: "{{ sqlite_db_path }}"
      register: db_stat

    # Step 7: Create SQLite database file (if it does not exist)
    - name: Create SQLite database file
      command: "sqlite3 {{ sqlite_db_path }} 'VACUUM;'"
      when: not db_stat.stat.exists

    # Step 8: Set permissions for SQLite database file
    - name: Set permissions for SQLite database file
      file:
        path: "{{ sqlite_db_path }}"
        owner: "{{ sqlite_user }}"
        group: "{{ sqlite_group }}"
        mode: '0600'
    
    # Step 9: (Optional) Create sample SQLite schema
    - name: Create sample SQLite schema
      copy:
        content: |
          CREATE TABLE IF NOT EXISTS users (
              id INTEGER PRIMARY KEY AUTOINCREMENT,
              username TEXT NOT NULL,
              email TEXT NOT NULL
          );
          INSERT INTO users (username, email) VALUES ('user1', 'user1@example.com');
        dest: /tmp/sqlite_schema.sql
      notify: Run SQLite schema

  handlers:
    - name: Run SQLite schema
      command: "sqlite3 {{ sqlite_db_path }} < /tmp/sqlite_schema.sql"
    
    # Step 10: Clean up temporary schema file
    - name: Remove temporary schema file
      file:
        path: /tmp/sqlite_schema.sql
        state: absent
