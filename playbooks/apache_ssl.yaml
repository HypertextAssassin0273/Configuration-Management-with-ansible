---
- name: Install and configure Apache with SSL
  hosts: all
  become: yes
  vars:
    apache_port: 443
    server_name: example.com
    cert_dir: /etc/ssl/certs
    key_dir: /etc/ssl/private
    cert_name: apache_selfsigned
    
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install Apache and required modules
      package:
        name:
          - apache2
          - openssl
        state: present

    - name: Ensure SSL certificate directories exist
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ cert_dir }}"
        - "{{ key_dir }}"

    - name: Enable SSL and headers modules
      apache2_module:
        name: "{{ item }}"
        state: present
      loop:
        - ssl
        - headers
      notify: Reload apache

    - name: Check if SSL certificate exists
      stat:
        path: "{{ cert_dir }}/{{ cert_name }}.crt"
      register: ssl_cert

    - name: Generate self-signed SSL certificate
      shell: |
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
        -keyout {{ key_dir }}/{{ cert_name }}.key \
        -out {{ cert_dir }}/{{ cert_name }}.crt \
        -subj "/C=US/ST=State/L=City/O=Organization/OU=IT Department/CN={{ server_name }}"
      when: not ssl_cert.stat.exists
      notify: Reload apache

    - name: Set SSL certificate permissions
      file:
        path: "{{ item.path }}"
        owner: root
        group: root
        mode: "{{ item.mode }}"
      loop:
        - { path: "{{ cert_dir }}/{{ cert_name }}.crt", mode: '0644' }
        - { path: "{{ key_dir }}/{{ cert_name }}.key", mode: '0600' }
      when: not ssl_cert.stat.exists

    - name: Create Apache SSL configuration
      copy:
        dest: /etc/apache2/sites-available/default-ssl.conf
        content: |
          <IfModule mod_ssl.c>
              <VirtualHost *:{{ apache_port }}>
                  ServerAdmin webmaster@localhost
                  ServerName {{ server_name }}
                  DocumentRoot /var/www/html

                  SSLEngine on
                  SSLCertificateFile {{ cert_dir }}/{{ cert_name }}.crt
                  SSLCertificateKeyFile {{ key_dir }}/{{ cert_name }}.key

                  <FilesMatch "\.(cgi|shtml|phtml|php)$">
                      SSLOptions +StdEnvVars
                  </FilesMatch>

                  <Directory /usr/lib/cgi-bin>
                      SSLOptions +StdEnvVars
                  </Directory>

                  ErrorLog ${APACHE_LOG_DIR}/error.log
                  CustomLog ${APACHE_LOG_DIR}/access.log combined

                  # Modern SSL configuration
                  SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1
                  SSLCipherSuite ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
                  SSLHonorCipherOrder off
                  SSLSessionTickets off

                  # HSTS (uncomment if you're sure)
                  # Header always set Strict-Transport-Security "max-age=63072000"
              </VirtualHost>
          </IfModule>
        owner: root
        group: root
        mode: '0644'
      notify: Reload apache

    - name: Enable default SSL site
      command: a2ensite default-ssl
      notify: Reload apache

    # Optional UFW configuration - only run if UFW is installed
    - name: Check if UFW is installed
      command: which ufw
      register: ufw_check
      ignore_errors: yes
      changed_when: false

    - name: Allow HTTPS through UFW firewall
      community.general.ufw:
        rule: allow
        port: "{{ apache_port }}"
        proto: tcp
      when: 
        - ufw_check.rc == 0
        - not ansible_virtualization_type in ['docker', 'container']

    - name: Ensure Apache service is started and enabled
      service:
        name: apache2
        state: started
        enabled: yes

  handlers:
    - name: Reload apache
      service:
        name: apache2
        state: reloaded